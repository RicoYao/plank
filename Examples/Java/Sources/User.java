//
// User.java
// Autogenerated by plank
//
// DO NOT EDIT - EDITS WILL BE OVERWRITTEN
// @generated
//

package com.pinterest.models;

import android.support.annotation.IntDef;
import android.support.annotation.Nullable;
import android.support.annotation.StringDef;
import com.google.auto.value.AutoValue;
import com.google.gson.Gson;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.SerializedName;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.Set;

@AutoValue
public abstract class User {
    public static final String UNSET = "unset";
    public static final String IMMEDIATE = "immediate";
    public static final String DAILY = "daily";
    @StringDef({UNSET, IMMEDIATE, DAILY})
    @Retention(RetentionPolicy.SOURCE)
    public @interface UserEmailFrequency {}

    public abstract @SerializedName("bio") @Nullable String bio();
    public abstract @SerializedName("counts") @Nullable Map<String, Integer> counts();
    public abstract @SerializedName("created_at") @Nullable Date createdAt();
    public abstract @SerializedName("email_frequency") @Nullable @UserEmailFrequency String emailFrequency();
    public abstract @SerializedName("first_name") @Nullable String firstName();
    public abstract @SerializedName("id") @Nullable String identifier();
    public abstract @SerializedName("image") @Nullable Image image();
    public abstract @SerializedName("last_name") @Nullable String lastName();
    public abstract @SerializedName("type") @Nullable String type();
    public abstract @SerializedName("username") @Nullable String username();
    public static Builder builder() {
        return new AutoValue_User.Builder();
    }
    abstract Builder toBuilder();
    public static TypeAdapter<User> jsonAdapter(Gson gson) {
        return new AutoValue_User.GsonTypeAdapter(gson);
    }
    @AutoValue.Builder
    public abstract static class Builder {
    
    
        public abstract Builder setBio(@Nullable String value);
        public abstract Builder setCounts(@Nullable Map<String, Integer> value);
        public abstract Builder setCreatedAt(@Nullable Date value);
        public abstract Builder setEmailFrequency(@Nullable @UserEmailFrequency String value);
        public abstract Builder setFirstName(@Nullable String value);
        public abstract Builder setIdentifier(@Nullable String value);
        public abstract Builder setImage(@Nullable Image value);
        public abstract Builder setLastName(@Nullable String value);
        public abstract Builder setType(@Nullable String value);
        public abstract Builder setUsername(@Nullable String value);
        public abstract User build();
    
    }
}
